var U=Object.defineProperty;var Z=(i,e,t)=>e in i?U(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var u=(i,e,t)=>Z(i,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function t(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerPolicy&&(a.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?a.credentials="include":r.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(r){if(r.ep)return;r.ep=!0;const a=t(r);fetch(r.href,a)}})();var _=Object.defineProperty,O=(i,e,t)=>e in i?_(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,P=(i,e,t)=>(O(i,typeof e!="symbol"?e+"":e,t),t);class v{constructor(e,t,s){P(this,"_rows"),P(this,"_columns"),P(this,"_values"),this._rows=Math.max(e,1),this._columns=Math.max(t,1),this._values=new Array(this._rows).fill([]).map(()=>new Array(this._columns).fill(0)),s&&(this.values=s)}get rows(){return this._rows}get columns(){return this._columns}get values(){return this._values}set values(e){const t=Math.min(e.length,this.rows),s=Math.min(e[0].length,this.columns);for(let r=0;r<t;r++)for(let a=0;a<s;a++)this.values[r][a]=e[r][a]}at(e,t){return this.values[e][t]}reset(){this.values=this.values.map(e=>e.map(()=>0))}addAColumn(){return new v(this.rows,this.columns+1,this.values)}addARow(){return new v(this.rows+1,this.columns,this.values)}equals(e){return this.rows===e.rows&&this.columns===e.columns&&this.values.reduce((t,s,r)=>t&&s.reduce((a,n,l)=>a&&e.at(r,l)===n,t),!0)}setAsIdentity(){if(this.rows!==this.columns)throw new Error("Dimension error! The matrix isn't squared!");return this.values.forEach((e,t)=>{e.forEach((s,r)=>{this.values[t][r]=t===r?1:0})}),this}static identity(e){if(e<1)throw Error("Dimension error! Matrix dimension must be positive.");return new v(e,e).setAsIdentity()}multiply(e){if(this.columns!==e.rows)throw new Error("Dimension error! The operand matrix must have the same number of rows as 'this' matrix columns!");const t=new v(this.rows,e.columns);return t.values=t.values.map((s,r)=>s.map((a,n)=>this.values[r].reduce((l,h,d)=>l+h*e.at(d,n),0))),t}indexOf(e){for(let t=0;t<this.rows;t++)for(let s=0;s<this.columns;s++)if(this.values[t][s]===e)return[t,s];return[-1,-1]}max(){return this.values.reduce((e,t)=>Math.max(e,...t),-1/0)}min(){return this.values.reduce((e,t)=>Math.min(e,...t),1/0)}round(){return new v(this.rows,this.columns,this.values.map(e=>e.map(t=>Math.round(t))))}determinant(){if(this.rows!==this.columns)throw new Error("Dimension error! The matrix isn't squared!");if(this.rows===this.columns&&this.columns===1)return this.values[0][0];let e=0,t=1;if(this.rows===2)e=this.values[0][0]*this.values[1][1]-this.values[1][0]*this.values[0][1];else for(let s=0;s<this.rows;s++){const r=this.getCofactor(0,s);e+=t*this.at(0,s)*r.determinant(),t=-t}return e}getCofactor(e,t){return new v(this.rows-1,this.columns-1,this.values.filter((s,r)=>r!==e).map(s=>s.filter((r,a)=>a!==t)))}transpose(){return new v(this.columns,this.rows,new Array(this.columns).fill([]).map((e,t)=>new Array(this.rows).fill(0).map((s,r)=>this.at(r,t))))}inverse(){if(this.rows!==this.columns)throw new Error("Dimension error! The matrix isn't squared!");const e=this.determinant();if(e===0)throw new Error("Determinant is 0, can't compute inverse.");const t=new v(this.rows,this.columns,this.values.map((s,r)=>s.map((a,n)=>Math.pow(-1,r+n)*this.getCofactor(r,n).determinant()))).transpose();return new v(this.rows,this.columns,this.values.map((s,r)=>s.map((a,n)=>t.at(r,n)/e)))}toString(){return`[${this.values.map(e=>`[${e.join(", ")}]`).join(`,
`)}]`}}class m{constructor(e){P(this,"_values"),this._values=new Array((e||[0]).length).fill(0),e&&(this.values=e)}get rows(){return this.values.length}get values(){return this._values}set values(e){const t=Math.min(this.values.length,e.length);for(let s=0;s<t;s++)this.values[s]=e[s]}angleFrom(e){if(this.rows!==e.rows)throw new Error("To calculate the angle, vectors must have the same dimension!");const t=this.dot(e)/(this.length()*e.length());return Math.acos(t)}distanceFrom(e){if(this.rows!==e.rows)throw new Error("To calculate the distance, vectors must have the same dimension!");return this.subtract(e).length()}at(e){return this.values[e]}indexOf(e){return this.values.indexOf(e)}reset(){this.values=this.values.fill(0)}addAValue(){return this.values.push(0),new m(this.values)}equals(e){return this.rows===e.rows&&this.values.reduce((t,s,r)=>t&&e.at(r)===s,!0)}negate(){return new m(this.values.map(e=>-e))}length(){return Math.sqrt(this.squaredLength())}squaredLength(){return this.dot(this)}add(e){if(this.rows!==e.rows)throw new Error("Vectors don't have the same dimension!");return this.operateOnAllValues((t,s)=>t+e.at(s))}subtract(e){if(this.rows!==e.rows)throw new Error("Vectors don't have the same dimension!");return this.operateOnAllValues((t,s)=>t-e.at(s))}multiply(e){if(this.rows!==e.rows)throw new Error("Vectors don't have the same dimension!");return this.operateOnAllValues((t,s)=>t*e.at(s))}divide(e){if(this.rows!==e.rows)throw new Error("Vectors don't have the same dimension!");return this.operateOnAllValues((t,s)=>e.at(s)===0?t:t/e.at(s))}max(){if(this.rows===0)throw new Error("Cannot get the maximum value of an empty vector!");return Math.max(...this.values)}min(){if(this.rows===0)throw new Error("Cannot get the minimum value of an empty vector!");return Math.min(...this.values)}round(){if(this.rows===0)throw new Error("Cannot round an empty vector!");return this.operateOnAllValues(e=>Math.round(e))}scale(e){return this.operateOnAllValues(t=>t*e)}operateOnAllValues(e){return new m(this.values.map(e))}normalize(){const e=this.length();return this.operateOnAllValues(t=>t/e)}dot(e){return this.values.reduce((t,s,r)=>t+s*e.at(r),0)}cross(e){if(this.rows<3||e.rows<3)throw new Error("Cross product is possible on 3D vectors only");const t=new Array(3);return t[0]=this.at(1)*e.at(2)-this.at(2)*e.at(1),t[1]=this.at(2)*e.at(0)-this.at(0)*e.at(2),t[2]=this.at(0)*e.at(1)-this.at(1)*e.at(0),new m(t)}mix(e,t){return new m(this.values.map((s,r)=>s+t*(e.at(r)-s)))}static get360angle(e,t){if(e.rows!==3||t.rows!==3)throw new Error("Vectors must be in 3D!. You can add a 1 dimension if it is missing.");return-Math.atan2(t.cross(e).dot(new m([0,0,1]).normalize()),e.dot(t))}toString(){return`[${this.values.join(", ")}]`}}const j=1e-5,B=class{constructor(i){P(this,"values",new Float32Array(4)),i!==void 0&&(this.xyzw=i)}get x(){return this.values[0]}set x(i){this.values[0]=i}get y(){return this.values[1]}set y(i){this.values[1]=i}get z(){return this.values[2]}set z(i){this.values[2]=i}get w(){return this.values[3]}set w(i){this.values[3]=i}get xy(){return[this.values[0],this.values[1]]}set xy(i){this.values[0]=i[0],this.values[1]=i[1]}get xyz(){return[this.values[0],this.values[1],this.values[2]]}set xyz(i){this.values[0]=i[0],this.values[1]=i[1],this.values[2]=i[2]}get xyzw(){return[this.values[0],this.values[1],this.values[2],this.values[3]]}set xyzw(i){this.values[0]=i[0],this.values[1]=i[1],this.values[2]=i[2],this.values[3]=i[3]}at(i){return this.values[i]}reset(){for(let i=0;i<4;i++)this.values[i]=0}copy(i){i||(i=new B);for(let e=0;e<4;e++)i.values[e]=this.values[e];return i}roll(){const i=this.x,e=this.y,t=this.z,s=this.w;return Math.atan2(2*(i*e+s*t),s*s+i*i-e*e-t*t)}pitch(){const i=this.x,e=this.y,t=this.z,s=this.w;return Math.atan2(2*(e*t+s*i),s*s-i*i-e*e+t*t)}yaw(){return Math.asin(2*(this.x*this.z-this.w*this.y))}equals(i,e=j){for(let t=0;t<4;t++)if(Math.abs(this.values[t]-i.at(t))>e)return!1;return!0}setIdentity(){return this.x=0,this.y=0,this.z=0,this.w=1,this}calculateW(){const i=this.x,e=this.y,t=this.z;return this.w=-Math.sqrt(Math.abs(1-i*i-e*e-t*t)),this}inverse(){const i=B.dot(this,this);if(!i)return this.xyzw=[0,0,0,0],this;const e=i?1/i:0;return this.x*=-e,this.y*=-e,this.z*=-e,this.w*=e,this}conjugate(){return this.values[0]*=-1,this.values[1]*=-1,this.values[2]*=-1,this}length(){const i=this.x,e=this.y,t=this.z,s=this.w;return Math.sqrt(i*i+e*e+t*t+s*s)}normalize(i){i||(i=this);const e=this.x,t=this.y,s=this.z,r=this.w;let a=Math.sqrt(e*e+t*t+s*s+r*r);return a?(a=1/a,i.x=e*a,i.y=t*a,i.z=s*a,i.w=r*a,i):(i.x=0,i.y=0,i.z=0,i.w=0,i)}add(i){for(let e=0;e<4;e++)this.values[e]+=i.at(e);return this}multiply(i){const e=this.values[0],t=this.values[1],s=this.values[2],r=this.values[3],a=i.x,n=i.y,l=i.z,h=i.w;return this.x=e*h+r*a+t*l-s*n,this.y=t*h+r*n+s*a-e*l,this.z=s*h+r*l+e*n-t*a,this.w=r*h-e*a-t*n-s*l,this}static dot(i,e){return i.x*e.x+i.y*e.y+i.z*e.z+i.w*e.w}static sum(i,e){const t=new B;return t.x=i.x+e.x,t.y=i.y+e.y,t.z=i.z+e.z,t.w=i.w+e.w,t}static product(i,e){const t=new B,s=i.x,r=i.y,a=i.z,n=i.w,l=e.x,h=e.y,d=e.z,c=e.w;return t.x=s*c+n*l+r*d-a*h,t.y=r*c+n*h+a*l-s*d,t.z=a*c+n*d+s*h-r*l,t.w=n*c-s*l-r*h-a*d,t}static cross(i,e){const t=new B,s=i.x,r=i.y,a=i.z,n=i.w,l=e.x,h=e.y,d=e.z,c=e.w;return t.x=n*d+a*c+s*h-r*l,t.y=n*c-s*l-r*h-a*d,t.z=n*l+s*c+r*d-a*h,t.w=n*h+r*c+a*l-s*d,t}static shortMix(i,e,t){const s=new B;if(t<=0)return s.xyzw=i.xyzw,s;if(t>=1)return s.xyzw=e.xyzw,s;let r=B.dot(i,e);const a=e.copy();r<0&&(a.inverse(),r=-r);let n,l;if(r>.9999)n=1-t,l=0+t;else{const h=Math.sqrt(1-r*r),d=Math.atan2(h,r),c=1/h;n=Math.sin((1-t)*d)*c,l=Math.sin((0+t)*d)*c}return s.x=n*i.x+l*a.x,s.y=n*i.y+l*a.y,s.z=n*i.z+l*a.z,s.w=n*i.w+l*a.w,s}static mix(i,e,t){const s=new B,r=i.x*e.x+i.y*e.y+i.z*e.z+i.w*e.w;if(Math.abs(r)>=1)return s.xyzw=i.xyzw,s;const a=Math.acos(r),n=Math.sqrt(1-r*r);if(Math.abs(n)<.001)return s.x=i.x*.5+e.x*.5,s.y=i.y*.5+e.y*.5,s.z=i.z*.5+e.z*.5,s.w=i.w*.5+e.w*.5,s;const l=Math.sin((1-t)*a)/n,h=Math.sin(t*a)/n;return s.x=i.x*l+e.x*h,s.y=i.y*l+e.y*h,s.z=i.z*l+e.z*h,s.w=i.w*l+e.w*h,s}static fromAxisAngle(i,e){if(i.rows!==3)throw new Error("The axis vector must be in 3D!");const t=new B;e*=.5;const s=Math.sin(e);return t.x=i.at(0)*s,t.y=i.at(1)*s,t.z=i.at(2)*s,t.w=Math.cos(e),t}};let tt=B;P(tt,"identity",new B().setIdentity());let A=document.getElementById("canvas"),o=A.getContext("2d"),et=35,g={};window.onkeyup=function(i){g[i.keyCode]=!1};window.onkeydown=function(i){g[i.keyCode]=!0};class K{constructor(){u(this,"momentOfInertia");u(this,"AABB");u(this,"coords");u(this,"collision");this.momentOfInertia=1,this.AABB={xmin:1,xmax:1,ymin:1,ymax:1},this.coords=new m([0,0]),this.collision=!1}drawBoundingBox(){o.strokeStyle="red",o.lineWidth=5,o.beginPath(),o.moveTo(this.AABB.xmin,this.AABB.ymin),o.lineTo(this.AABB.xmin,this.AABB.ymax),o.lineTo(this.AABB.xmax,this.AABB.ymax),o.lineTo(this.AABB.xmax,this.AABB.ymin),o.lineTo(this.AABB.xmin,this.AABB.ymin),o.stroke()}drawForce(e,t,s,r){o.strokeStyle=r,o.fillStyle=r,o.moveTo(t[0]+2,t[1]+2),o.beginPath(),o.lineTo(t[0],t[1]),o.lineTo(e[0]*s+t[0],e[1]*s+t[1]),o.lineTo(e[0]*s+t[0]+2,e[1]*s+t[1]+2),o.closePath(),o.fill(),o.stroke()}update(){}draw(){}drawArrow(e,t,s,r="pink"){let a=new v(2,8,[[0,-5,5,1,1,-1,-1,5],[15,10,10,10,0,0,10,10]]),n=s.multiply(a).values;o.strokeStyle=r,o.lineWidth=1,o.beginPath(),o.moveTo(e+n[0][0],t+n[1][0]);for(let l=0;l<a.values[0].length;l++)o.lineTo(e+n[0][l],t+n[1][l]);return o.closePath(),o.fillStyle=r,o.stroke(),o.fill(),[e+n[0][0],t+n[1][0]]}centroidCalc(){return[0,0]}}class T extends K{constructor(t){super();u(this,"radius");this.radius=t,this.momentOfInertia=this.momentOfInertiaCalc(),this.AABB=this.getAABB()}isPointWithinCircle(t){let s=this.coords.values;return Math.sqrt(Math.abs(t[0]-s[0])+Math.abs(t[1]-s[1]))<=this.radius}update(){this.AABB=this.getAABB()}getAABB(){let t=this.coords.values,s=t[0]+this.radius,r=t[0]-this.radius,a=t[1]+this.radius,n=t[1]-this.radius;return this.AABB={xmin:r,xmax:s,ymin:n,ymax:a},{xmin:r,xmax:s,ymin:n,ymax:a}}momentOfInertiaCalc(){return Math.PI*this.radius**4/4}draw(){let t=this.coords.values;o.lineWidth=2,o.strokeStyle="white",o.beginPath(),o.arc(t[0],t[1],this.radius,0,2*Math.PI),o.stroke(),o.fillStyle="blue",o.fill(),o.fillStyle="black",o.fillRect(t[0],t[1],1,1),this.collision=!1}drawBoundingBox(){o.strokeStyle="red",o.lineWidth=5,o.beginPath(),o.moveTo(this.AABB.xmin,this.AABB.ymin),o.lineTo(this.AABB.xmin,this.AABB.ymax),o.lineTo(this.AABB.xmax,this.AABB.ymax),o.lineTo(this.AABB.xmax,this.AABB.ymin),o.lineTo(this.AABB.xmin,this.AABB.ymin),o.stroke()}drawForce(t,s,r,a){o.strokeStyle=a,o.fillStyle=a,o.moveTo(s[0]+2,s[1]+2),o.beginPath(),o.lineTo(s[0],s[1]),o.lineTo(t[0]*r+s[0],t[1]*r+s[1]),o.lineTo(t[0]*r+s[0]+2,t[1]*r+s[1]+2),o.closePath(),o.fill(),o.stroke()}}function st(i,e,t,s,r){let a=r(t,i),n=[];for(let l=0;l<e;l++)n[l]=i[l]+(s-t)*a[l];return n}class X{constructor(e){u(this,"coords");u(this,"ode");u(this,"force");u(this,"momentum");u(this,"velocity");u(this,"stateVectorLength");this.force=new m([0,0,0]),this.momentum=new m([0,0,0]),this.velocity=new m([0,0,0]),this.coords=e,this.ode=(t,s,r,a)=>st(t,s,r,a,this.dydt.bind(this)),this.stateVectorLength=0}stateVectorsToArray(){return console.error("empty parent method run"),[]}arrayToStateVectors(e){console.error("empty parent method run")}dydt(e=0,t){return console.error("empty parent method run"),[]}reset(){console.error("empty parent method run")}}class N extends X{constructor(t,s=.999){super(t);u(this,"velocity");u(this,"force");u(this,"mass");u(this,"invMass");u(this,"linDrag");u(this,"momentum");u(this,"extremeDrag");this.extremeDrag=!1,this.velocity=new m([0,0,0]),this.mass=1,this.force=new m([0,0,0]),this.invMass=this.mass**-1,this.linDrag=s,this.momentum=new m([0,0,0]),this.stateVectorLength=6}stateVectorsToArray(){return[...this.coords.values,...this.momentum.values]}arrayToStateVectors(t){this.coords=new m([t[0],t[1],t[2]]),this.momentum=new m([t[3]*this.linDrag,t[4]*this.linDrag,t[5]*this.linDrag])}reset(){this.force=new m([0,0,0])}dydt(t=0,s){let r=[],a=this.force.values;return r[0]=s[3]*this.invMass,r[1]=s[4]*this.invMass,r[2]=s[5]*this.invMass,r[3]=a[0],r[4]=a[1],r[5]=a[2],r}linearVelocityOfPoint(t,s,r){return[t[0]*r+s[0],t[1]*r+s[1]]}}class L{constructor(e=-1){u(this,"_value");this._value=e}get value(){return this._value++,this._value}}class F extends X{constructor(t){super(t);u(this,"velocity");u(this,"rvelocity");u(this,"rotation");u(this,"mass");u(this,"linDrag");u(this,"momentum");u(this,"angularMomentum");u(this,"invMass");u(this,"torque");u(this,"force");this.velocity=new m([0,0,0]),this.rvelocity=0,this.rotation=new v(3,3,[[0,0,0],[0,0,0],[0,0,0]]),this.mass=1,this.invMass=this.mass**-1,this.linDrag=.999,this.momentum=new m([0,0,0]),this.angularMomentum=new m([0,0,1]),this.torque=new m([0,0,0]),this.force=new m([0,0,0]),this.stateVectorLength=18}stateVectorsToArray(){return[...this.coords.values,...this.momentum.values,...this.angularMomentum.values,...this.rotation.values[0],...this.rotation.values[1],...this.rotation.values[2]]}arrayToStateVectors(t){let s=new L;this.coords=new m([t[s.value],t[s.value],t[s.value]]),this.momentum=new m([t[s.value],t[s.value],t[s.value]]),this.angularMomentum=new m([t[s.value],t[s.value],t[s.value]]),this.rotation=new v(3,3,[[t[s.value],t[s.value],t[s.value],t[s.value],t[s.value],t[s.value],t[s.value],t[s.value],t[s.value]]])}reset(){this.torque=new m([0,0,1]),this.force=new m([0,0,0])}dydt(t=0,s){let r=[],a=this.force.values,n=new L;r[n.value]=s[3]*this.invMass,r[n.value]=s[4]*this.invMass,r[n.value]=s[5]*this.invMass,r[n.value]=a[0],r[n.value]=a[1],r[n.value]=a[2],r[n.value]=this.torque.values[0],r[n.value]=this.torque.values[1],r[n.value]=this.torque.values[2];let l=new v(3,3,[[0,-s[8],s[7]],[s[8],0,-s[6]],[-s[7],s[6],0]]),h=new L(8),d=new v(3,3,[[s[h.value],s[h.value],s[h.value]],[s[h.value],s[h.value],s[h.value]],[s[h.value],s[h.value],s[h.value]]]),c=l.multiply(d);for(let p=0;p<c.values.length;p++)c.values[p].map(b=>r[n.value]=b);return r}linearVelocityOfPoint(t,s,r){return[t[0]*r+s[0],t[1]*r+s[1]]}drawForce(t,s,r,a){o.strokeStyle=a,o.fillStyle=a,o.moveTo(s[0]+2,s[1]+2),o.beginPath(),o.lineTo(s[0],s[1]),o.lineTo(t[0]*r+s[0],t[1]*r+s[1]),o.lineTo(t[0]*r+s[0]+2,t[1]*r+s[1]+2),o.closePath(),o.fill(),o.stroke()}}class S extends K{constructor(t){super();u(this,"relVertices");u(this,"absoluteVerticies");u(this,"rotation");this.relVertices=t,this.centroidCalc(),this.momentOfInertia=this.momentOfInertiaCalc(),this.absoluteVerticies=t,this.AABB=this.getAABB(),this.rotation=0}update(){this.getAbsoluteVertices(),this.getAABB()}getAbsoluteVertices(){let t=new v(2,2,[[Math.cos(this.rotation),-Math.sin(this.rotation)],[Math.sin(this.rotation),Math.cos(this.rotation)]]);this.absoluteVerticies=t.multiply(this.absoluteVerticies)}getNormalVector(t,s){let r=s[0]-t[0],a=s[1]-t[1],n=Math.sqrt(a**2+r**2);return new m([-a/n,r/n,0])}getAABB(){let t=this.coords.values,s=t[0],r=t[0],a=t[1],n=t[1],l=this.absoluteVerticies.values;for(let h=0;h<this.relVertices.columns;h++)l[0][h]+t[0]>s&&(s=l[0][h]+t[0]),l[0][h]+t[0]<r&&(r=l[0][h]+t[0]),l[1][h]+t[1]>a&&(a=l[1][h]+t[1]),l[1][h]+t[1]<n&&(n=l[1][h]+t[1]);return this.AABB={xmin:r,xmax:s,ymin:n,ymax:a},{xmin:r,xmax:s,ymin:n,ymax:a}}momentOfInertiaCalc(){return 5}centroidCalc(){let t=0,s=0,r=this.relVertices.values;for(let a=0;a<this.relVertices.columns;a++)t+=r[0][a],s+=r[1][a];t=t/this.relVertices.columns,s=s/this.relVertices.columns;for(let a=0;a<this.relVertices.columns;a++)r[0][a]-=t,r[1][a]-=s;return[t,s]}draw(){let t=this.coords.values;o.lineWidth=2,o.moveTo(this.absoluteVerticies.values[0][0]+t[0],this.absoluteVerticies.values[1][0]+t[1]),o.beginPath();for(let h=0;h<this.absoluteVerticies.columns;h++)o.lineTo(this.absoluteVerticies.values[0][h]+t[0],this.absoluteVerticies.values[1][h]+t[1]);o.closePath(),o.fillStyle="blue",this.collision&&(o.fillStyle="red"),o.fill(),o.fillStyle="black",o.fillRect(t[0],t[1],1,1),o.fillRect(this.absoluteVerticies.values[0][0]+t[0]-5,this.absoluteVerticies.values[1][0]+t[1]-5,10,10),o.fillStyle="red",o.fillRect(this.absoluteVerticies.values[0][1]+t[0]-5,this.absoluteVerticies.values[1][1]+t[1]-5,10,10),o.strokeStyle="red",o.beginPath();let s=[this.absoluteVerticies.values[0][3%this.absoluteVerticies.columns],this.absoluteVerticies.values[1][3%this.absoluteVerticies.columns]],r=[this.absoluteVerticies.values[0][4%this.absoluteVerticies.columns],this.absoluteVerticies.values[1][4%this.absoluteVerticies.columns]],a=this.getNormalVector(s,r).values,n=(s[0]+r[0])/2,l=(s[1]+r[1])/2;o.moveTo(a[0]*50+t[0]+n,a[1]*50+t[1]+l),o.lineTo(t[0]+n,t[1]+l),o.stroke()}drawForce(t,s,r,a){o.strokeStyle=a,o.fillStyle=a,o.moveTo(s[0]+2,s[1]+2),o.beginPath(),o.lineTo(s[0],s[1]),o.lineTo(t[0]*r+s[0],t[1]*r+s[1]),o.lineTo(t[0]*r+s[0]+2,t[1]*r+s[1]+2),o.closePath(),o.fill(),o.stroke()}drawBoundingBox(){o.strokeStyle="red",o.lineWidth=5,o.beginPath(),o.moveTo(this.AABB.xmin,this.AABB.ymin),o.lineTo(this.AABB.xmin,this.AABB.ymax),o.lineTo(this.AABB.xmax,this.AABB.ymax),o.lineTo(this.AABB.xmax,this.AABB.ymin),o.lineTo(this.AABB.xmin,this.AABB.ymin),o.stroke()}}const D=class D{constructor(e=new T(50),t,s,r,a,n){u(this,"mass");u(this,"linDrag");u(this,"playerControlled1");u(this,"playerControlled2");u(this,"physicsObjectNumber");u(this,"shape");u(this,"dynamic");u(this,"gravityTrue");u(this,"computer");u(this,"coords");u(this,"rotation");this.computer=t,this.shape=e,this.dynamic=a,this.rotation=new v(3,3,[[0,0,0],[0,0,0],[0,0,0]]),this.mass=1,this.linDrag=.999,this.playerControlled1=s,this.playerControlled2=r,this.physicsObjectNumber=D.PhysicsObjectAmount,this.gravityTrue=n,D.PhysicsObjectAmount++;let l=e.centroidCalc();this.coords=t.coords,this.coords.values[0]+=l[0],this.coords.values[1]+=l[1]}updateForces(){if(this.shape.coords=this.coords,this.playerControlled1){let e=1;g[87]&&(this.computer.force=this.computer.force.add(new m([0,-1,0]))),g[83]&&(this.computer.force=this.computer.force.add(new m([0,e,0]))),g[65]&&(this.computer.force=this.computer.force.add(new m([-1,0,0]))),g[68]&&(this.computer.force=this.computer.force.add(new m([e,0,0])))}if(this.playerControlled2){let e=.5;g[38]&&(this.computer.force=this.computer.force.add(new m([0,-.5,0]))),g[40]&&(this.computer.force=this.computer.force.add(new m([0,e,0]))),g[37]&&(this.computer.force=this.computer.force.add(new m([-.5,0,0]))),g[39]&&(this.computer.force=this.computer.force.add(new m([e,0,0])))}this.gravityTrue&&(this.computer.force=this.computer.force.add(new m([0,.981*this.mass/5,0])))}update(e){this.shape.update();let t=0;this.shape.AABB.ymax>A.height-t&&(this.computer.momentum.values[1]=-this.computer.momentum.values[1]*.99,this.computer.coords.values[1]-=this.shape.AABB.ymax-A.height+t),this.shape.AABB.ymin<t&&(this.computer.momentum.values[1]=-this.computer.momentum.values[1]*.99,this.computer.coords.values[1]-=this.shape.AABB.ymin-t),this.shape.AABB.xmax>A.width-t&&(this.computer.momentum.values[0]=-this.computer.momentum.values[0]*.99,this.computer.coords.values[0]-=this.shape.AABB.xmax-A.width+t),this.shape.AABB.xmin<t&&(this.computer.momentum.values[0]=-this.computer.momentum.values[0]*.99,this.computer.coords.values[0]-=this.shape.AABB.xmin-t);let s=this.computer.stateVectorsToArray(),r=this.computer.ode(s,this.computer.stateVectorLength,0,1);this.computer.arrayToStateVectors(r),this.coords=this.computer.coords,this.computer instanceof F&&this.shape instanceof S&&(this.shape.rotation=Math.atan2(this.computer.rotation.values[1][0],this.computer.rotation.values[0][0])),this.computer.reset()}draw(){this.shape.draw()}};u(D,"PhysicsObjectAmount",0);let q=D;function it(i,e){i.shape.update(),e.shape.update(),(i.shape.AABB.xmin<e.shape.AABB.xmin&&i.shape.AABB.xmax>e.shape.AABB.xmin||i.shape.AABB.xmin<e.shape.AABB.xmax&&i.shape.AABB.xmax>e.shape.AABB.xmax)&&(i.shape.AABB.ymin<e.shape.AABB.ymin&&i.shape.AABB.ymax>e.shape.AABB.ymin||i.shape.AABB.ymin<e.shape.AABB.ymax&&i.shape.AABB.ymax>e.shape.AABB.ymax)&&(i.shape instanceof S&&e.shape instanceof S,i.shape instanceof S&&e.shape instanceof T&&i.computer instanceof F&&H(i,i.computer,e,i.shape,e.shape),i.shape instanceof T&&e.shape instanceof S&&e.computer instanceof F&&H(e,e.computer,i,e.shape,i.shape),i.shape instanceof T&&e.shape instanceof T&&rt(i,e,i.shape,e.shape))}function H(i,e,t,s,r){for(let a=0;a<s.absoluteVerticies.columns;a++){let n=s.getNormalVector([s.absoluteVerticies.values[0][a],s.absoluteVerticies.values[1][a]],[s.absoluteVerticies.values[0][(a+1)%s.absoluteVerticies.columns],s.absoluteVerticies.values[1][(a+1)%s.absoluteVerticies.columns]]),l=s.absoluteVerticies.values[1][a]-s.absoluteVerticies.values[1][(a+1)%s.absoluteVerticies.columns]/s.absoluteVerticies.values[0][a]-s.absoluteVerticies.values[0][(a+1)%s.absoluteVerticies.columns],h=-(1/l);Math.sqrt(r.radius**2/(1+h^2));let d=s.absoluteVerticies.values[1][a]-s.absoluteVerticies.values[1][a]*l,c=r.coords.values[1]-r.coords.values[0]*h,p=(c-d)/(l-h),b=l*p+c;o.strokeStyle="red",o.lineWidth=5,o.beginPath(),o.moveTo(r.coords.values[0],r.coords.values[1]),o.lineTo(p,b),o.stroke(),o.fillRect(p,b,50,50);let w=new m([s.absoluteVerticies.values[0][a]+s.coords.values[0],s.absoluteVerticies.values[1][a]+s.coords.values[1]]).dot(n),f=new m(r.coords.values).dot(n);if(w<f&&w>f-r.radius){let z=w+r.radius-f,y=n.scale(z),M=y.add(t.computer.coords.negate()),x=y.add(e.coords.negate()),V=t.computer.momentum.scale(1/t.mass).add(i.computer.momentum.scale(1/i.mass)).add(e.angularMomentum.cross(x));R(1,V,n,t.mass,i.mass,M,x,t.shape.momentOfInertia,t.shape.momentOfInertia)}if(w>f&&w<f+r.radius){let z=w-r.radius-f,y=n.scale(z),M=y.add(t.computer.coords.negate()),x=y.add(e.coords.negate()),V=t.computer.momentum.scale(1/t.mass).add(i.computer.momentum.scale(1/i.mass)).add(e.angularMomentum.cross(x));R(1,V,n,t.mass,i.mass,M,x,t.shape.momentOfInertia,t.shape.momentOfInertia)}}}function rt(i,e,t,s){let r=i.coords.add(e.coords.negate()).length(),a=t.radius+s.radius;if(r<a){t.collision=!0,s.collision=!0;let n=a-r,l=e.coords.add(i.coords.negate()).normalize();i.computer.coords=i.coords.add(l.scale(-n)),e.computer.coords=e.coords.add(l.scale(n));let h=i.computer.momentum.scale(1/i.mass).add(e.computer.momentum.scale(-1/e.mass)),d=R(1,h,l,i.mass,e.mass,l,l,t.momentOfInertia,s.momentOfInertia);i.computer.momentum=i.computer.momentum.add(l.scale(d/1.5)),e.computer.momentum=e.computer.momentum.add(l.scale(-d/1.5))}}function R(i,e,t,s,r,a,n,l,h){let d=a.cross(t),c=n.cross(t);return e.scale(-2).dot(t)/(1/s+1/r+d.dot(d)/l+c.dot(c)/h)}function at(i,e=1,t=1){let s=new v(2,2,[[Math.cos(i),Math.sin(i)],[-Math.sin(i),Math.cos(i)]]),r=new v(2,2,[[e,0],[0,t]]);return s.multiply(r)}class ot{constructor(e,t,s,r){u(this,"object1");u(this,"object2");u(this,"restLength");u(this,"stiffness");u(this,"springPattern");u(this,"numOfPoints");this.object1=e,this.object2=t,this.restLength=s,this.stiffness=r;let a=[],n=[];this.numOfPoints=100;for(let l=0;l<this.numOfPoints;l++)a[l]=l/100,n[l]=this.springPatternCallback(l);this.springPattern=new v(2,100,[a,n])}update(){const e=this.object2.coords.subtract(this.object1.coords),t=e.length(),s=this.stiffness*(t-this.restLength),r=e.normalize().scale(s);this.object1.dynamic&&(this.object1.computer.force=this.object1.computer.force.add(r)),this.object2.dynamic&&(this.object2.computer.force=this.object2.computer.force.subtract(r))}draw(e){let t=this.object2.coords.subtract(this.object1.coords),r=at(Math.atan2(t.values[0],t.values[1])-Math.PI/2,t.length(),50).multiply(this.springPattern).values;e.strokeStyle="#bec3cc",e.lineWidth=1,e.moveTo(this.object1.coords.values[0]+r[0][0],this.object1.coords.values[1]+r[1][0]);for(let a=0;a<this.numOfPoints;a++)e.lineTo(this.object1.coords.values[0]+r[0][a],this.object1.coords.values[1]+r[1][a]);e.stroke()}springPatternCallback(e){return Math.sin(e)/10}}class nt{constructor(e=2,t=2,s=new m([100,100,0]),r=!0,a=!0,n=!0,l=!0,h=100){u(this,"physicsObjectArray");u(this,"springArray");u(this,"spacing");u(this,"circleRatio");u(this,"coords");u(this,"playerControlled1");u(this,"playerControlled2");u(this,"dynamic");u(this,"gravityTrue");u(this,"face");this.face=!0,this.playerControlled1=r,this.playerControlled2=a,this.dynamic=n,this.gravityTrue=l,this.coords=s,this.spacing=h,this.circleRatio=.25,this.physicsObjectArray=[],this.springArray=[];const d=[[-1,-1,Math.sqrt(2)],[-1,0,1],[-1,1,Math.sqrt(2)],[0,-1,1],[0,1,1],[1,-1,Math.sqrt(2)],[1,0,1],[1,1,Math.sqrt(2)]];let c=e,p=t,b=.25;for(let w=0;w<p;w++)for(let f=0;f<c;f++){let z=new T(this.spacing*b),y=new N(new m([this.spacing+w*this.spacing+.01*this.spacing*f,this.spacing+f*this.spacing+.01*this.spacing*w,0]).add(this.coords),.98),M=new q(z,y,r,a,n,l);this.physicsObjectArray[w*c+f]=M}for(let w=0;w<p;w++)for(let f=0;f<c;f++)for(const[z,y,M]of d){const x=w+z,V=f+y;if(x>=0&&x<p&&V>=0&&V<c&&(x>w||x===w&&V>f)){let G=this.physicsObjectArray[x*c+V],J=this.physicsObjectArray[w*c+f],Q=new ot(J,G,this.spacing*M*1.5,.005*M);this.springArray.push(Q)}}}draw(e){let t=this.centroidCalc();e.beginPath(),e.fillStyle="blue",this.findOutsidePoints().map(s=>{let r=new m(s).subtract(t).normalize().scale(this.spacing*this.circleRatio*2).add(new m(s)).values;e.lineTo(r[0],r[1])}),e.closePath(),e.fill(),this.face&&(e.fillStyle="black",e.fillRect(t.values[0]-20,t.values[1]-20,10,10),e.fillRect(t.values[0]+20,t.values[1]-20,10,10),e.fillRect(t.values[0]-40,t.values[1]+10,80,10))}cross(e,t,s){return(t[0]-e[0])*(s[1]-e[1])-(t[1]-e[1])*(s[0]-e[0])}findOutsidePoints(){let e=this.physicsObjectArray.map(r=>r.shape.coords.values.slice(0,2));e.sort((r,a)=>r[0]-a[0]||r[1]-a[1]);const t=[];for(const r of e){for(;t.length>=2&&this.cross(t[t.length-2],t[t.length-1],r)<=0;)t.pop();t.push(r)}const s=[];for(let r=e.length-1;r>=0;r--){const a=e[r];for(;s.length>=2&&this.cross(s[s.length-2],s[s.length-1],a)<=0;)s.pop();s.push(a)}return s.pop(),t.pop(),t.concat(s)}update(){this.physicsObjectArray.map(e=>{e.update(1)}),this.springArray.map(e=>{e.update()})}centroidCalc(){let e=0,t=0;return this.physicsObjectArray.map(s=>{e+=s.shape.coords.values[0],t+=s.shape.coords.values[1]}),e=e/this.physicsObjectArray.length,t=t/this.physicsObjectArray.length,new m([e,t])}}A.width=window.innerWidth;A.height=window.innerHeight;let lt=new T(25),ut=new N(new m([100,100,0]));new q(lt,ut,!0,!1,!0,!0);let ht=new T(25),mt=new N(new m([100,300,0]));new q(ht,mt,!1,!0,!0,!0);let C=[],W=[],Y=new nt(4,4,new m([300,300,0]),!0,!0,!0,!0,.05*A.width+.05*A.height);Y.physicsObjectArray.map(i=>{C.push(i)});Y.springArray.map(i=>{W.push(i)});setInterval(()=>wt(),1e3/et);var $=function(i){var e=i.touches[0];return{x:e.clientX,y:e.clientY}};let k,E=0,ct=function(i){E=i.touches.length,i.preventDefault(),k=$(i),A.addEventListener("touchmove",vt,!1),A.addEventListener("touchend",dt,!1)},I=new m([0,0,0]),dt=function(i){E=i.touches.length,E===1&&(k=$(i))},vt=function(i){i.preventDefault();let e=$(i);I=I.add(new m([e.x-k.x,e.y-k.y,0])),k=e};A.addEventListener("touchstart",ct);function wt(){o.clearRect(0,0,window.innerWidth,window.innerHeight),C.map((i,e)=>{for(let t=e+1;t<C.length;t++)it(i,C[t])}),W.map((i,e)=>{i.update()}),C.map((i,e)=>{i.computer.force=i.computer.force.add(I.scale(.1)),i.updateForces(),i.update(1)}),I=new m([0,0,0]),g[32]||E>1?(W.map((i,e)=>{i.draw(o)}),C.map((i,e)=>{i.shape.draw()})):Y.draw(o)}
